[
  {
    "objectID": "1_snpStats.html",
    "href": "1_snpStats.html",
    "title": "Leitura de arquivos Illumina com snpStats",
    "section": "",
    "text": "Nesta prática vamos trabalhar com dados de sequencias de um chip comercial de galinhas da Illumina. Um arquivo Final Report é um arquivo de texto gerado a partir do Genome Studio contendo as informações de genótipos dos indivíduos.\nO Final Report pode conter diversos campos com informações sobre a genotipagem, aqui vamos cobrir alguns mais importantes:\n\nCampos de um Final Report\n\n\n\n\n\n\nCampo\nDescrição\n\n\n\n\nSample Name\nNome da amostra\n\n\nSNP Name\nIdentificador do SNP\n\n\nAllele1 Top  Allele2 Top\nAlelos 1 e 2 em nucleotideos correspondentes aos Alelos A e B, reportados na fita Top\n\n\nSample ID\nIdentificador da Amostra\n\n\nGC Score\nMedida de qualidade calculada para cada genótipo, varia de 0 a 1\n\n\nAllele1 Forward  Allele2 Forward\nAlelos 1 e 2 em nucleotideos correspondentes aos Alelos A e B, reportados na fita Forward\n\n\nAllele1 AB  Allele2 AB\nAlelos 1 e 2 em genótipos AB\n\n\n\nPara consultar todos os campos disponíveis no Final Report você pode visitar o site da Illumina.\n\n\nAbaixo você pode ver algumas linhas iniciais de um dos arquivos Final Report que serão trabalhos nesta prática.\n1[Header]\nGSGT Version    2.0.5\nProcessing Date 10/19/2020 12:00 PM\nContent     Chicken_50K_CobbCons_15000986_A.bpm\nNum SNPs    57636\nTotal SNPs  57636\nNum Samples 192\nTotal Samples   192\nFile    1 of 192\n2[Data]\nSNP Name    Sample ID   Allele1 - AB    Allele2 - AB    GC Score\n10080_COIII 203900190022_R01C01 B   B   0.6976\n10668_COIII 203900190022_R01C01 B   B   0.7118\n12187_ND4   203900190022_R01C01 B   B   0.6915\n15466_CYTB_MT   203900190022_R01C01 B   B   0.3856\n16262_ND6   203900190022_R01C01 B   B   0.8686\n16370_ND6   203900190022_R01C01 B   B   0.8878\n5831_ND2_MT 203900190022_R01C01 A   A   0.7214\n\n1\n\n[Header]: As primeiras linhas de um Final Report nos trazem informações sobre o processo de genotipagem. Nesta seção podemos encontrar o número de SNPs, de amostras, e se o arquivo é um arquivo único ou individual (um Final Report por amostra).\n\n2\n\n[Data]: Na seção data inicia o arquivo de fato, é possível então identificar quais colunas estão disponíveis.\n\n\n\n\n\n\n\n\nAtenção!\n\n\n\nNem sempre os Final Reports apresentam todos os campos necessários, para fazer a edição é necessário então ter acesso ao projeto original da genotipagem, e fazer uma nova edição para gerar os arquivos no Genome Studio da Illumina. Isso em cenários reais pode variar bastante entre empresas e projetos.\n\n\n\n\n\nÉ no arquivo de Mapas que encontramos as informações de identificação e da posição física de cada SNP no genoma.\n\nArquivo de Mapa\n\n\n\n\n\n\nCampo\nDescrição\n\n\n\n\nName\nIdentificador do SNP\n\n\nChr\nCromossomo\n\n\nPosition\nPosição no genoma em pares de base\n\n\nGenTrain Score\nMétrica de qualidade do cluster de SNP. É o escore do SNP no algoritmo de clusterização GenTrain\n\n\n\nAbaixo você pode ver algumas linhas iniciais do arquivo de mapas que utilizaremos. Em um arquivo de mapas, cada SNP ocupa uma linha do arquivo.\nName    Chr Position    GenTrain Score\n10080_COIII 0   0   0.7310036\n10668_COIII 0   0   0.7387226\n12187_ND4   0   0   0.7660004\n15466_CYTB_MT   0   0   0.799299\n16262_ND6   0   0   0.8815182\n16370_ND6   0   0   0.8978758\n5831_ND2_MT 0   0   0.7440125\n8472_COXII_MT   0   0   0.7310036\nGga_rs10721746  23  5869156 0.873894\nGga_rs10721817  1   107404689   0.8605233",
    "crumbs": [
      "Leitura de arquivos Illumina com snpStats"
    ]
  },
  {
    "objectID": "1_snpStats.html#arquivos-final-report-e-de-mapa",
    "href": "1_snpStats.html#arquivos-final-report-e-de-mapa",
    "title": "Leitura de arquivos Illumina com snpStats",
    "section": "",
    "text": "Nesta prática vamos trabalhar com dados de sequencias de um chip comercial de galinhas da Illumina. Um arquivo Final Report é um arquivo de texto gerado a partir do Genome Studio contendo as informações de genótipos dos indivíduos.\nO Final Report pode conter diversos campos com informações sobre a genotipagem, aqui vamos cobrir alguns mais importantes:\n\nCampos de um Final Report\n\n\n\n\n\n\nCampo\nDescrição\n\n\n\n\nSample Name\nNome da amostra\n\n\nSNP Name\nIdentificador do SNP\n\n\nAllele1 Top  Allele2 Top\nAlelos 1 e 2 em nucleotideos correspondentes aos Alelos A e B, reportados na fita Top\n\n\nSample ID\nIdentificador da Amostra\n\n\nGC Score\nMedida de qualidade calculada para cada genótipo, varia de 0 a 1\n\n\nAllele1 Forward  Allele2 Forward\nAlelos 1 e 2 em nucleotideos correspondentes aos Alelos A e B, reportados na fita Forward\n\n\nAllele1 AB  Allele2 AB\nAlelos 1 e 2 em genótipos AB\n\n\n\nPara consultar todos os campos disponíveis no Final Report você pode visitar o site da Illumina.\n\n\nAbaixo você pode ver algumas linhas iniciais de um dos arquivos Final Report que serão trabalhos nesta prática.\n1[Header]\nGSGT Version    2.0.5\nProcessing Date 10/19/2020 12:00 PM\nContent     Chicken_50K_CobbCons_15000986_A.bpm\nNum SNPs    57636\nTotal SNPs  57636\nNum Samples 192\nTotal Samples   192\nFile    1 of 192\n2[Data]\nSNP Name    Sample ID   Allele1 - AB    Allele2 - AB    GC Score\n10080_COIII 203900190022_R01C01 B   B   0.6976\n10668_COIII 203900190022_R01C01 B   B   0.7118\n12187_ND4   203900190022_R01C01 B   B   0.6915\n15466_CYTB_MT   203900190022_R01C01 B   B   0.3856\n16262_ND6   203900190022_R01C01 B   B   0.8686\n16370_ND6   203900190022_R01C01 B   B   0.8878\n5831_ND2_MT 203900190022_R01C01 A   A   0.7214\n\n1\n\n[Header]: As primeiras linhas de um Final Report nos trazem informações sobre o processo de genotipagem. Nesta seção podemos encontrar o número de SNPs, de amostras, e se o arquivo é um arquivo único ou individual (um Final Report por amostra).\n\n2\n\n[Data]: Na seção data inicia o arquivo de fato, é possível então identificar quais colunas estão disponíveis.\n\n\n\n\n\n\n\n\nAtenção!\n\n\n\nNem sempre os Final Reports apresentam todos os campos necessários, para fazer a edição é necessário então ter acesso ao projeto original da genotipagem, e fazer uma nova edição para gerar os arquivos no Genome Studio da Illumina. Isso em cenários reais pode variar bastante entre empresas e projetos.\n\n\n\n\n\nÉ no arquivo de Mapas que encontramos as informações de identificação e da posição física de cada SNP no genoma.\n\nArquivo de Mapa\n\n\n\n\n\n\nCampo\nDescrição\n\n\n\n\nName\nIdentificador do SNP\n\n\nChr\nCromossomo\n\n\nPosition\nPosição no genoma em pares de base\n\n\nGenTrain Score\nMétrica de qualidade do cluster de SNP. É o escore do SNP no algoritmo de clusterização GenTrain\n\n\n\nAbaixo você pode ver algumas linhas iniciais do arquivo de mapas que utilizaremos. Em um arquivo de mapas, cada SNP ocupa uma linha do arquivo.\nName    Chr Position    GenTrain Score\n10080_COIII 0   0   0.7310036\n10668_COIII 0   0   0.7387226\n12187_ND4   0   0   0.7660004\n15466_CYTB_MT   0   0   0.799299\n16262_ND6   0   0   0.8815182\n16370_ND6   0   0   0.8978758\n5831_ND2_MT 0   0   0.7440125\n8472_COXII_MT   0   0   0.7310036\nGga_rs10721746  23  5869156 0.873894\nGga_rs10721817  1   107404689   0.8605233",
    "crumbs": [
      "Leitura de arquivos Illumina com snpStats"
    ]
  },
  {
    "objectID": "1_snpStats.html#fazendo-a-leitura-dos-genótipos-com-o-snpstats",
    "href": "1_snpStats.html#fazendo-a-leitura-dos-genótipos-com-o-snpstats",
    "title": "Leitura de arquivos Illumina com snpStats",
    "section": "2 Fazendo a leitura dos genótipos com o snpStats",
    "text": "2 Fazendo a leitura dos genótipos com o snpStats\n\nO nosso objetivo é fazer a leitura dos Final Reports para cada indivíduo e organizá-los em um único arquivo de genótipo para futuras análises.",
    "crumbs": [
      "Leitura de arquivos Illumina com snpStats"
    ]
  },
  {
    "objectID": "1_snpStats.html#snpstats",
    "href": "1_snpStats.html#snpstats",
    "title": "Leitura de arquivos Illumina com snpStats",
    "section": "3 snpStats",
    "text": "3 snpStats\nPara esta prática vamos precisar dos pacotes BiocManager e snpStats. Você pode fazer a instalação rodando o código abaixo:\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"snpStats\")\n\nApós a instalação podemos então carregar os pacotes necessários:\n\nlibrary(snpStats)\nlibrary(tidyverse)\n\nDe maneira geral, em um arquivo de genótipos cada linha deve representar um indivíduo e conter além de sua identificação, as colunas contendo os genótipos para cada SNP. A depender do software utilizado para as análises genômicas, a configuração do arquivo de genótipo pode envolver mais campos e a codificação dos genótipos também pode variar.\nNesta prática, vamos construir o arquivo de genótipos em três passos:\n\nCriar uma lista com os nomes de todos os Final Reports pra leitura.\nCriar vetores que contenham o ID dos Animais e o ID dos SNPs.\nUsar o pacote snpStats para gerar o arquivo de genótipos.\n\n\n3.1 Criando a lista de Final Reports\nOs arquivos para esta prática estão na pasta data/01_snpStats. Vamos usar a função list.files para gerar nossa lista de arquivos a serem lidos.\n\nfilenames &lt;- list.files(path = \"data/01_snpStats/\",\n           pattern = \"Final_Report_.*.txt\",\n           full.names = TRUE)\n\n\n\n3.2 Criando os vetores de ID dos SNPs\nAqui é bem simples, faremos a leitura do arquivo de mapas e vamos extrair a primeira coluna que é a de ID dos SNPs.\n\nsnpids &lt;- read.table(\"data/01_snpStats/SNP-Table-Chickens50k.txt\",\n                     sep = \"\\t\",\n                     header = TRUE) |&gt;\n          pull(Name)\n\n\n\n3.3 Criando os vetores de ID dos Animais\nAqui vamos utilizar a função map do pacote purrr para iterar sobre todos os nossos Final Reports e capturar somente a informação de ID dos animais.\n\n1animids&lt;- filenames |&gt;\n2            map(\\(x){\n3              scan(x,skip=11,nlines=1,sep=\"\\t\",what=\"character\")[2]\n            }) |&gt;\n            reduce(c)\n\n\n1\n\nPassamos nosso vetor de filenames para a funçào map\n\n2\n\n(\\x){}: este trecho cria uma função anônima dentro do map. Isso faz com que a cada rodada da iteração x seja substituído pelo valor correspondente no na nossa lista de arquivos e as operações entre {} sejam executadas.\n\n3\n\nAqui usamos a função scan para ler o arquivo:\n\n\n\n\n\nx : é o arquivo atual na lista de arquivos passadas para o map\nskip: é utilizado para pular as 11 linhas iniciais do arquivo, lembram delas?\nnlines: informamos que só queremos ler 1 linha do arquivo\n[2]: nosso arquivo possui 5 colunas, com a notação de colchetes estamos extraindo o valor da segunda coluna que contém o ID do animal\n\n\nreduce(c): como a função map retorna uma lista de ids, aqui usamos reduce para transformar a lista em um vetor com a função c() de concatenação\n\nAgora já temos tudo que precisamos para gerar o arquivo de genótipos!\n\n\n3.4 Gerando o arquivo de genótipos\nA função read.snps.long é a responsável por receber o vetor de Final Reports, fazer a leitura e organizar o nosso arquivo de genótipos.\n\n1genodat&lt;-read.snps.long(file=filenames,\n2                        sample.id=animids,\n3                        snp.id=snpids,\n                        diploid=NULL, \n4                        fields=c(sample=2,snp=1,allele1=3,allele2=4,confidence=5),\n5                        codes=c(\"A\",\"B\"),\n6                        threshold=0.5,\n                        lower=TRUE, \n7                        skip=11,\n                        sep=\"\\t\",\n                        verbose=TRUE, \n                        in.order=FALSE,\n                        every=10000)\n\n\n1\n\nInformamos o vetor de filenames\n\n2\n\nO vetor de ID dos animais animids\n\n3\n\nO vetor de ID dos SNPs snpids\n\n4\n\nAqui informamos pra função em quais colunas do Final Report ela vai encontrar as informações referentes a amostra (sample), SNP, alelos ( allele1 e allele2 ) e o GC Score (confidence).\n\n5\n\nAqui informados de que maneira os genótipos estão codificados no Final Report.\n\n6\n\nDefinimos o valor mínimo de qualidade por amostra (GC Score)\n\n7\n\nIgnoramos as 11 primeiras linhas do Final Report\n\n\n\n\n1Reading one call per input line\n   Sample id is in field 2\n   SNP id is in field 1\n   Allele 1 is in field 3\n   Allele 2 is in field 4\n   Confidence score is in field 5\n2Reading SnpMatrix with 20 rows and 57636 columns\n                             Cumulative totals\n                    -----------------------------------\n    File     Line   Accepted Rejected  No call  Skipped    File name\n      20    57647    1100749    51957       14      220    ..._Report_Chk_9.txt\n31100749 genotypes successfully read\n51957 genotypes were rejected due to low confidence\n14 genotypes were not called\n4Warning message:\nIn read.snps.long(file = filenames, sample.id = animids, snp.id = snpids,  :\n  220 lines of input file(s) were skipped\n  \n\n1\n\nNos informa quais colunas foram utilizadas para leitura\n\n2\n\nNos diz quantas linhas e colunas o arquivo de gentótipo possui na primeira passagem.\n\n3\n\nExibe estatísticas da leitura, como o número de genótipos lidos e rejeitados.\n\n4\n\nNos informa o total de linhas que foram ignoradas na leitura.\n\n\n\n\n3.5 Explorando o objeto de genótipos genodat\nQuantos indivíduos e marcadores temos?\n\ndim(genodat)\n\n[1]    20 57636\n\n\nO que encontramos nas linhas?\n\nrownames(genodat) |&gt;\n  head()\n\n[1] \"203900190022_R01C01\" \"203900190022_R05C02\" \"203900190022_R06C01\"\n[4] \"203900190022_R06C02\" \"203900190025_R01C01\" \"203900190025_R01C02\"\n\n\nE nas colunas?\n\ncolnames(genodat) |&gt;\n  head()\n\n[1] \"10080_COIII\"   \"10668_COIII\"   \"12187_ND4\"     \"15466_CYTB_MT\"\n[5] \"16262_ND6\"     \"16370_ND6\"",
    "crumbs": [
      "Leitura de arquivos Illumina com snpStats"
    ]
  },
  {
    "objectID": "1_snpStats.html#salvando-o-arquivo-de-genótipos",
    "href": "1_snpStats.html#salvando-o-arquivo-de-genótipos",
    "title": "Leitura de arquivos Illumina com snpStats",
    "section": "4 Salvando o arquivo de genótipos",
    "text": "4 Salvando o arquivo de genótipos\nPodemos agora salvar o nosso arquivo de genótipo para utilizar em análises daqui pra frente. Podemos salvá-lo tanto em formato de texto quanto no formato Rdata, um formato específico do R e otimizado para salvar objetos que podem ser recuperados facilmente em qualquer sessão do R.\n\n\n\n\n\n\nLembrete!\n\n\n\nLembre que se você não especificar o caminho o arquivo será salvo na sua pasta raiz do projeto, aquela pasta que contém o .Rproj. Se desejar salvar em algum outro subdiretório basta informar o caminho no momento de salvar o arquivo.\nNos exemplos abaixo estamos salvando na subpasta data/01_snpStats\n\n\n\n4.1 Salvando .Rdata\n\nsave(genodat,file=\"data/01_snpStats/genodat.Rdata\")\n\n\n\n4.2 Salvando em formato SNPMatrix\n\n1sampleIDs&lt;-sprintf('%-20s',rownames(genodat))\n2rownames(genodat)&lt;-sampleIDs\n3write.SnpMatrix(genodat,\n                file=\"data/01_snpStats/genodat.txt\",\n                quote=F,\n                row.names=T,\n                col.names=F,\n                na=5,\n                sep=\"\") \n\n\n1\n\nAqui usamos a função sprintf para formatar nossos nomes de IDs para que todos tenham 20 caracteres de comprimento.\n\n2\n\nEntão atualizamos os nomes das linhas do nosso arquivo genodat com os IDs formatados.\n\n3\n\nPor fim, salvamos o nosso arquivo em formato SNPMatrix. Observem que neste formato nossas colunas de genótipo não possuem separação entre elas. sep=\"\".\n\n\n\n\n\n\n4.3 Explorando nosso arquivo genodat.txt\nE essa é a cara do nosso arquivo de genótipos.\n203900190022_R01C01 222522022120152111112111101100 ...\n203900190022_R05C02 222522022101051222222111201120 ...\n203900190022_R06C01 222522022111051212112111022200 ...\n203900190022_R06C02 222522022220052221212021112210 ...\n203900190025_R01C01 222522021021150221122201112110 ...\n203900190025_R01C02 020500002020150211122000202110 ...\n203900190025_R02C01 222522022112150211122000102110 ...\n203900190025_R02C02 222522021121150200122002112210 ...\n203900190025_R03C01 222522022021150200022100112000 ...\n203900190025_R03C02 222522022221150221122000111110 ...\n\nNeste formato os genótipos estão representados na forma de dosagem de alelos.\n\n\n\n\n\nGenótipo\nCódigo\n\n\n\n\nAA\n2\n\n\nAB\n1\n\n\nBB\n0\n\n\nMissing\n5",
    "crumbs": [
      "Leitura de arquivos Illumina com snpStats"
    ]
  },
  {
    "objectID": "1_snpStats.html#código-completo",
    "href": "1_snpStats.html#código-completo",
    "title": "Leitura de arquivos Illumina com snpStats",
    "section": "5 Código Completo",
    "text": "5 Código Completo\n\n# Instalando os pacotes necessários\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"snpStats\")\n\n# Carregando pacotes\n\nlibrary(snpStats)\nlibrary(tidyverse)\nlibrary(data.table)\n\n# Gerando vetor de Final Reports\n\nfilenames &lt;- list.files(path = \"data/01_snpStats/\",\n           pattern = \"Final_Report_.*.txt\",\n           full.names = TRUE)\n\n# Gerando vetor de SNP ids\n\nsnpids &lt;- read.table(\"data/01_snpStats/SNP-Table-Chickens50k.txt\",\n                     sep = \"\\t\",\n                     header = TRUE) |&gt;\n          pull(Name)\n\n# Gerando vetor de Animal ids\n\nanimids&lt;- filenames |&gt;\n            map(\\(x){ \n              scan(x,skip=11,nlines=1,sep=\"\\t\",what=\"character\")[2]\n            }) |&gt;\n            reduce(c)\n\n# Criando o arquivo de genótipo\n\ngenodat&lt;-read.snps.long(file=filenames,\n                        sample.id=animids,\n                        snp.id=snpids, \n                        diploid=NULL, \n                        fields=c(sample=2,snp=1,allele1=3,allele2=4,confidence=5),\n                        codes=c(\"A\",\"B\"),\n                        threshold=0.5,\n                        lower=TRUE, \n                        skip=11,\n                        sep=\"\\t\",\n                        verbose=TRUE, \n                        in.order=FALSE,\n                        every=10000)\n\n# Salvando em formato Rdata\n\nsave(genodat,file=\"data/01_snpStats/genodat.Rdata\")\n\n\n# Salvando em formato SNPMatrix\n\nsampleIDs&lt;-sprintf('%-20s',rownames(genodat))\nrownames(genodat)&lt;-sampleIDs  \nwrite.SnpMatrix(genodat, \n                file=\"data/01_snpStats/genodat.txt\",\n                quote=F,\n                row.names=T,\n                col.names=F,\n                na=5,\n                sep=\"\")",
    "crumbs": [
      "Leitura de arquivos Illumina com snpStats"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introdução à Estatística Genômica",
    "section": "",
    "text": "Este é um material de apoio a disciplina Introdução à Estatística Genômica do PPG em Zootecnia (PPZ - UESB). Esse material foi desenvolvido como suporte as atividades do Grupo de Pesquisas em Genômica Aplicada a Conservação e Melhoramento (GACOM) na Universidade Estadual do Sudoeste da Bahia (UESB), campus Jequié. Este material pode ser compartilhado desde que não seja comercializado. Agradecemos qualquer comentário e sugestão de correção ou melhoria do material.",
    "crumbs": [
      "Bem-vind@s!"
    ]
  },
  {
    "objectID": "index.html#apresentacao",
    "href": "index.html#apresentacao",
    "title": "Introdução à Estatística Genômica",
    "section": "",
    "text": "Este é um material de apoio a disciplina Introdução à Estatística Genômica do PPG em Zootecnia (PPZ - UESB). Esse material foi desenvolvido como suporte as atividades do Grupo de Pesquisas em Genômica Aplicada a Conservação e Melhoramento (GACOM) na Universidade Estadual do Sudoeste da Bahia (UESB), campus Jequié. Este material pode ser compartilhado desde que não seja comercializado. Agradecemos qualquer comentário e sugestão de correção ou melhoria do material.",
    "crumbs": [
      "Bem-vind@s!"
    ]
  },
  {
    "objectID": "index.html#autor",
    "href": "index.html#autor",
    "title": "Introdução à Estatística Genômica",
    "section": "Autor",
    "text": "Autor\n\n\n\n\n\n\nMe chamo Paulo Barros, sou Bacharel em Ciências Biológicas com ênfase em Genética pela UESB, Mestre em Genética, Biodiversidade e Conservação pela UESB. Tenho atuado como Cientista de Dados na área da Biologia e Melhoramento Animal desde o final da graduação colaborando em trabalhos das mais diversas áreas. Também tenho experiência oferecendo cursos e mentorias em Análise de Dados com a Linguagem R para estudantes de graduação e pós-graduação, bem como para professores e profissionais de áreas correlatas da Biologia. Atualmente sou aluno de Doutorado no PPG em Zootecnia (PPZ) na área de Melhoramento Animal aplicado a pequenos ruminantes.",
    "crumbs": [
      "Bem-vind@s!"
    ]
  }
]